{"version":3,"sources":["globalStyles.js","Components/NewPokeCard.js","Components/AddPokemon.js","Components/UpdatePokeCard.js","Components/PokeCardItem.js","Components/PokeCardGrid.js","Components/PokeView.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Background","styled","div","ModalWrapper","ModalContent","NewPokeCard","showModal","setShowModal","setPokemons","useState","inputName","setInputName","inputUrl","setInputUrl","className","type","value","placeholder","onChange","e","target","required","src","alt","onClick","prev","preventDefault","c","id","length","name","url","AddPokemon","UpdatePokeCard","pokemons","handleDelete","tempPokemons","console","log","forEach","pokemon","i","push","PokeCardItem","PokeCardGrid","pokemonList","map","PokeView","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e5aca19.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport styled from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n*{\r\n  box-sizing: border-box;\r\n  margin: 0, auto;\r\n  padding: 0;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n`\r\nexport const Background = styled.div`\r\n  width: 70%;\r\n  heigth: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index:5;\r\n  margin: 0 auto;\r\n`\r\nexport const ModalWrapper = styled.div`\r\n  width: 400px;\r\n  height: 500px;\r\n  padding: 10px;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  background: #fff;\r\n  color: #000;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  position relative;\r\n  z-index: 10;\r\n  border-radius: 10px;\r\n`\r\n\r\nexport const ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: start;\r\n  margin-top: 0px;\r\n\r\n  p {\r\n    margin-bottom: 0.7rem;\r\n    margin-top: 30px;\r\n  }\r\n\r\n  input {\r\n    border-radius: 10px;\r\n    background: #49afa8;\r\n    color: white;\r\n  }\r\n\r\n\r\n`","import React, { useState } from 'react';\r\nimport '../index.css';\r\nimport { Background, ModalContent, ModalWrapper } from '../globalStyles';\r\n\r\n\r\nexport const NewPokeCard = ( { showModal, setShowModal, setPokemons }) => {\r\n\r\nconst [inputName, setInputName] = useState('');\r\nconst [inputUrl, setInputUrl] = useState('')\r\n\r\n\r\nconst inputChangeName = (e) =>{\r\n  setInputName(e.target.value);\r\n}\r\n\r\nconst inputChangeUrl = (e) =>{\r\n  setInputUrl(e.target.value);\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n\r\n  setPokemons( c => [ \r\n    ...c,\r\n    {\r\n      id: c.length,\r\n      name: inputName,\r\n      url: inputUrl\r\n    } ]);\r\n  setInputName('');\r\n  setInputUrl('');\r\n}\r\n\r\nconst handleCancel = () =>{\r\n  setShowModal( prev => !prev);\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        showModal ? (\r\n          <Background>\r\n            <ModalWrapper showModal={showModal}>\r\n              <ModalContent>\r\n                  <div className=\"field\">\r\n                    <p>\r\n                      name:\r\n                    </p>\r\n                    <input type=\"text\" \r\n                    value={inputName}   \r\n                    placeholder='Type a name' \r\n                    onChange={ inputChangeName }\r\n                    required/> \r\n                  </div>  \r\n                  <div className=\"field\">\r\n                    <p>\r\n                      Image Url:\r\n                    </p>\r\n                    <input type=\"text\" \r\n                    value={inputUrl} \r\n                    placeholder=\"A link to pokemon's Image\" \r\n                    onChange={ inputChangeUrl }\r\n                    required/> \r\n                  </div>\r\n                  {\r\n                    inputUrl &&\r\n                  <img className=\"img-update\"\r\n                    src={ inputUrl }\r\n                    alt={ inputName }\r\n                  />\r\n                  }\r\n                  <div  className=\"buttons\">\r\n                    <button className=\"submitBtn btn btn-primary\" onClick={ handleCancel }>Cancel</button>\r\n                    <button className=\"submitBtn btn btn-primary\" onClick={ handleSubmit }>Save</button>\r\n                  </div>\r\n              </ModalContent>\r\n            </ModalWrapper>\r\n          </Background>\r\n      \r\n        ): null\r\n\r\n      }\r\n  </>\r\n  )\r\n}\r\n  ","import React, { useState } from 'react';\r\nimport '../index.css';\r\nimport { GlobalStyle } from '../globalStyles';\r\nimport { NewPokeCard } from './NewPokeCard';\r\n\r\nexport const AddPokemon = ( { setPokemons } ) => {\r\n  \r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = ()=> {\r\n    setShowModal( prev => !prev);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <button \r\n      className=\"card animate__animated animate__fadeIn addNew\"\r\n      onClick={ openModal }\r\n      ><p>+</p>\r\n      <p className=\"addNewText\">Add New</p>\r\n      </button>\r\n      <NewPokeCard showModal = {showModal} setShowModal={setShowModal} setPokemons={setPokemons}/>\r\n      <GlobalStyle />\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport '../index.css';\r\nimport { Background, ModalContent, ModalWrapper } from '../globalStyles';\r\n\r\nexport const UpdatePokeCard = ( { showModal, setShowModal, name, url, pokemons, setPokemons }) => {\r\n\r\n  const [inputName, setInputName] = useState(name);\r\n  const [inputUrl, setInputUrl] = useState(url);\r\n\r\n\r\nconst inputChangeName = (e) =>{\r\n  setInputName(e.target.value);\r\n}\r\n\r\nconst inputChangeUrl = (e) =>{\r\n  setInputUrl(e.target.value);\r\n}\r\n\r\n\r\nconst handleDelete = () => {\r\n  const tempPokemons = [];\r\n  console.log(pokemons)\r\n  pokemons.forEach((pokemon, i) => {\r\n    if( pokemon.name !== inputName ) {\r\n      tempPokemons.push(pokemon)\r\n    }\r\n  });\r\n  console.log('Temp');\r\n  console.log(tempPokemons);\r\n  setPokemons( tempPokemons);\r\n  setShowModal( prev => !prev);\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  \r\n  pokemons.forEach(pokemon => {\r\n    if( pokemon.name === name ) {\r\n      pokemon.name = inputName;\r\n      pokemon.url = inputUrl\r\n    }\r\n  });\r\n  setPokemons( c => [ \r\n    ...c ]);\r\n  setShowModal( prev => !prev);\r\n}\r\n\r\nconst handleCancel = () =>{\r\n  setShowModal( prev => !prev);\r\n}\r\n\r\n  return (\r\n    <>\r\n      {\r\n        showModal ? (\r\n          <Background>\r\n            <ModalWrapper showModal={showModal}>\r\n              <ModalContent>\r\n                  <div className=\"field\">\r\n                    <p>\r\n                      name:\r\n                    </p>\r\n                    <input type=\"text\" \r\n                    value={inputName} \r\n                    placeholder='Type a name' \r\n                    onChange={ inputChangeName }\r\n                    required/> \r\n                  </div>  \r\n                  <div className=\"field\">\r\n                    <p>\r\n                      Image Url:\r\n                    </p>\r\n                    <input type=\"text\" \r\n                    value={inputUrl} \r\n                    placeholder=\"A link to pokemon's Image\" \r\n                    onChange={ inputChangeUrl }\r\n                    required/> \r\n                  </div>\r\n                  <img className=\"img-update\"\r\n                  onClick={handleDelete}\r\n                    src={ url }\r\n                    alt={ name }\r\n                  />\r\n                  <div className=\"buttons\">\r\n                  <img className=\"delete\"\r\n                  onClick={handleDelete}\r\n                  src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcREKR4KhqGBxloJ_5K7SJbUn16IW-lGIbpTlxdvnnlpSdeWX339lG_wclw3FfCNHv72EN4&usqp=CAU'\r\n                  alt=\"delete\"\r\n                  />\r\n                  <button className=\"submitBtn btn btn-primary\" onClick={ handleCancel } >Cancel</button>\r\n                  <button className=\"submitBtn btn btn-primary\" onClick={ handleSubmit } >Save</button>\r\n                  </div>\r\n              </ModalContent>\r\n            </ModalWrapper>\r\n          </Background>\r\n      \r\n        ): null\r\n\r\n      }\r\n      {/* <PokeCardGrid pokemons={pokemons} /> */}\r\n  </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../index.css';\r\nimport { UpdatePokeCard } from './UpdatePokeCard';\r\n\r\nexport const PokeCardItem = ( { name, url, pokemons, setPokemons }) => {\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = ()=> {\r\n    setShowModal( prev => !prev);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n    <button className=\"card animate__animated animate__fadeIn\"\r\n    onClick={ openModal }>\r\n        <img \r\n          src={ url }\r\n          alt={ name }\r\n        />\r\n        <p>{ name }</p>\r\n    </button>\r\n    <UpdatePokeCard showModal = {showModal} setShowModal={setShowModal} pokemons={pokemons} setPokemons={setPokemons} name={name} url={url}/>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { AddPokemon } from './AddPokemon';\r\nimport { PokeCardItem } from './PokeCardItem';\r\n\r\nexport const PokeCardGrid = ({ pokemonList}) => {\r\n\r\n  const [pokemons, setPokemons] = useState( pokemonList);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-grid\">\r\n        {\r\n          pokemons.map( (pokemon) => (\r\n            < PokeCardItem \r\n            key={ pokemon.id }\r\n            { ...pokemon }\r\n            pokemons={ pokemons }\r\n            setPokemons={ setPokemons }        \r\n            />\r\n          ))\r\n        }\r\n        <AddPokemon \r\n        key={ pokemons.length }\r\n        setPokemons={ setPokemons } />\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { PokeCardGrid } from './PokeCardGrid'\r\n\r\nexport const PokeView = () => {\r\n\r\n  const pokemonList = [\r\n    {\r\n      id: 0,\r\n    name: 'Mewtwo',\r\n    url: \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/150.png\"\r\n    },\r\n    {\r\n      id: 1,\r\n    name: 'Pikachu',\r\n    url: 'https://forums.pokemmo.eu/uploads/monthly_2021_04/Pikachu.jpg.4beb42244ba209f0492c5543093dee81.jpg'\r\n    },\r\n    {\r\n      id: 2,\r\n    name: 'Bulbasaur',\r\n    url: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/001.png'\r\n    }\r\n  ]\r\n  return (\r\n    <>\r\n      <h1>Poke Cards</h1>\r\n      <h2>There are {pokemonList.length} Pokemons in your pokedex</h2>\r\n      <PokeCardGrid pokemonList={ pokemonList } />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PokeView } from './Components/PokeView';\n\nReactDOM.render(\n  <PokeView />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}